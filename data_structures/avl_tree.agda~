module bst (A : Set) (_≤A_ : A → A → Bool)
                     (trans≤A : ∀ {a b c : A} → a ≤A b ≡ true → b ≤A c ≡ true → a ≤A c ≡ true)
                     (total≤A : ∀{a b : A} → a ≤A b ≡ false → b ≤A a ≡ true) where
